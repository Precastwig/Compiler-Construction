### Starting build.
# Target: test.ml.depends, tags: { extension:ml, file:test.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules test.ml > test.ml.depends # cached
# Target: lex.mll, tags: { extension:mll, file:lex.mll, lexer, ocaml, ocamllex, quiet }
/home/precastwig/.opam/4.02.1/bin/ocamllex.opt -q lex.mll # cached
# Target: lex.ml.depends, tags: { extension:ml, file:lex.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules lex.ml > lex.ml.depends # cached
# Target: par.mly.depends, tags: { extension:mly, file:par.mly, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' par.mly > par.mly.depends # cached
# Target: Types.ml.depends, tags: { extension:ml, file:Types.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Types.ml > Types.ml.depends # cached
# Target: Types.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Types.cmo, file:Types.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Types.cmo Types.ml # cached
# Target: par.mly, tags: { byte, compile, extension:mly, file:par.mly, menhir, ocaml, parser, quiet }
menhir --ocamlc 'ocamlfind ocamlc' --infer par.mly # cached
# Target: par.mli.depends, tags: { extension:mli, file:par.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules par.mli > par.mli.depends # cached
# Target: par.cmi, tags: { byte, compile, extension:mli, file:par.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o par.cmi par.mli # cached
# Target: lex.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lex.cmo, file:lex.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o lex.cmo lex.ml # cached
# Target: test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o test.cmo test.ml # cached
# Target: par.ml.depends, tags: { extension:ml, file:par.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules par.ml > par.ml.depends # cached
# Target: Types.cmx, tags: { compile, extension:cmx, extension:ml, file:Types.cmx, file:Types.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Types.cmx Types.ml # cached
# Target: par.cmx, tags: { compile, extension:cmx, extension:ml, file:par.cmx, file:par.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o par.cmx par.ml # cached
# Target: lex.cmx, tags: { compile, extension:cmx, extension:ml, file:lex.cmx, file:lex.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o lex.cmx lex.ml # cached
# Target: test.cmx, tags: { compile, extension:cmx, extension:ml, file:test.cmx, file:test.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o test.cmx test.ml # cached
# Target: test.native, tags: { dont_link_with, extension:native, file:test.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt -linkpkg Types.cmx par.cmx lex.cmx test.cmx -o test.native # cached
# Compilation successful.
